# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: {{ .Values.backend.deployment.name }}
# spec:
#   replicas: {{ .Values.backend.deployment.replicas }}
#   selector:
#     matchLabels:
#       app: {{ .Values.backend.deployment.appLabel }}
#   template:
#     metadata:
#       labels:
#         app: {{ .Values.backend.deployment.appLabel }}
#         app1: {{ .Values.backend.deployment.additionalLabel }}
#     spec:
#       containers:
#       - name: {{ .Values.backend.deployment.containerName }}
#         image: {{ .Values.backend.deployment.image }}
#         imagePullPolicy: {{ .Values.backend.deployment.imagePullPolicy }}
#         ports:
#         - containerPort: {{ .Values.backend.deployment.containerPort }}
#         env:
#         - name: DB_HOST
#           value: {{ .Values.backend.env.dbHost }}
#         - name: DB_USER
#           value: {{ .Values.backend.env.dbUser }}
#         - name: DB_PASSWORD
#           value: {{ .Values.backend.env.dbPassword }}
#         - name: DB_NAME
#           value: {{ .Values.backend.env.dbName }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.deployment.name }}
spec:
  # replicas: {{ .Values.backend.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.backend.deployment.appLabel }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.deployment.appLabel }}
        app1: {{ .Values.backend.deployment.additionalLabel }}
    spec:
      initContainers:
      - name: wait-for-mysql
        image: busybox
        command: ['sh', '-c', 'until nc -z {{ .Values.backend.env.dbHost }} 3306; do echo waiting for mysql; sleep 2; done;']
      containers:
      - name: {{ .Values.backend.deployment.containerName }}
        image: {{ .Values.backend.deployment.image }}
        imagePullPolicy: {{ .Values.backend.deployment.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.backend.deployment.containerPort }}
        env:
        - name: DB_HOST
          value: {{ .Values.backend.env.dbHost }}
        - name: DB_USER
          value: {{ .Values.backend.env.dbUser }}
        - name: DB_PASSWORD
          value: {{ .Values.backend.env.dbPassword }}
        - name: DB_NAME
          value: {{ .Values.backend.env.dbName }}
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 50m
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 1
  maxReplicas: 150
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
# ---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: nodejs-app-metrics
#   labels:
#     release: myapp-release   # The label that connects this to the Prometheus instance
# spec:
#   selector:
#     matchLabels:
#       app: backend  # Match the label of the service you want to monitor
#   endpoints:
#   - port: "node-backend-port"        # Port as a string (important change here)
#     path: /metrics       # Path to scrape
#     interval: 15s        # Scrape every 15 seconds
#   namespaceSelector:
#     matchNames:
#       - ns1          # Namespace where the Node.js app is running
